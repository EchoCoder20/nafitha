document.addEventListener('DOMContentLoaded', function () {
    const sendButton = document.getElementById('send-btn');
    const userInput = document.getElementById('user-input');
    const chatWindow = document.getElementById('chat-window');
    const typingAnimation = document.getElementById('typing-animation');
    const examBox = document.getElementById('exam-box');


    function sendMessage() {
        const message = userInput.value.trim();

        if (message !== '') {
            const userMessage = `<div class="message user-message"><div class="message-bubble">${message}</div></div>`;
            chatWindow.innerHTML += userMessage;

            userInput.value = '';

            chatWindow.scrollTop = chatWindow.scrollHeight;

            typingAnimation.style.display = 'flex';

            setTimeout(() => {
                typingAnimation.style.display = 'none'; 
                
                const botMessage = `<div class="message murshid-message"><div class="message-bubble murshid-bubble">
                    ูุฑุญุจุงู! ๐<br> 
                    ุฃูุง ูุฑุดุฏ. ูุณุงุนุฏู ุงูุดุฎุตู ูู ุงูุชุดุงู ุดุบูู ูุงุฎุชูุงุฑ ุงูุชุฎุตุต ุงูุฃูุณุจ ูู. ุฃูุง ููุง ููุณุงุนุฏุชู ูู ูุนุฑูุฉ ููููู ูุฅุฑุดุงุฏู ูุญู ูุณุชูุจูู ุงููููู. ุฏุนูุง ูุจุฏุฃ ุงูุงุฎุชุจุงุฑ ูุชุญุฏูุฏ ุงูุชูุงูุงุชู ูุดุบูู ุงูุญูููู. ูู ุฃูุช ูุณุชุนุฏุ
                    <button class="start-btn">ุงุจุฏุฃ ุงูุงุฎุชุจุงุฑ ุงูุขู</button>
                </div></div>`;
                chatWindow.innerHTML += botMessage;
                
                chatWindow.scrollTop = chatWindow.scrollHeight;


                const startButton = document.querySelector('.start-btn');
                startButton.addEventListener('click', function() {
                    examBox.style.display = 'block'; 
                });
            }, 2000);
        }
    }

    sendButton.addEventListener('click', sendMessage);

    userInput.addEventListener('keypress', function (event) {
        if (event.key === 'Enter') {
            event.preventDefault(); 
            sendMessage();
        }
    });
});

const userInput = document.getElementById('user-input');

function autoResize() {
    this.style.height = 'auto'; 
    this.style.height = Math.min(this.scrollHeight, parseFloat(getComputedStyle(this).maxHeight)) + 'px'; 
}

userInput.addEventListener('input', autoResize);







// ุงูุงุฎุชุจุงุฑ

const questions = [
    {
        question: "ุงูุณุคุงู ุงูุฃูู: ูุง ูู ุฅุฎุชูุงุฑู ููุณุงุฑู ุงูุฏุฑุงุณู ูู ุงูุตู ุงูุซุงูู ุนุดุฑุ",
        options: [
            "ุนููู",
            "ุฃุฏุจู",
           
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุซุงูู: ููู ุชูุถู ูุถุงุก ููุช ูุฑุงุบูุ",
        options: [
            "ุงูุจุญุซ ุนู ูุนูููุงุช ุฌุฏูุฏุฉ ุนูู ุงูุฅูุชุฑูุช ุฃู ูู ุงููุชุจ.",
            "ุงูุนูู ุนูู ูุดุงุฑูุน ูุฏููุฉ ุฃู ุชูููุฉ.",
            "ุงูุชุทูุน ุฃู ุงููุดุงุฑูุฉ ูู ูุนุงููุงุช ูุฌุชูุนูุฉ.",
            "ููุงุฑุณุฉ ุงูุฑูุงุถุฉ ุฃู ุงูุฃูุดุทุฉ ุงูุฎุงุฑุฌูุฉ."
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุซุงูุซ: ุฃู ูู ูุฐู ุงูุฃูุดุทุฉ ูุณุชูููู ุฃูุซุฑุ",
        options: [
            "ุญู ุงููุดููุงุช ุงูุญุณุงุจูุฉ ูุงููุนุงุฏูุงุช ุงูุฑูุงุถูุฉ.",
            "ูุชุงุจุฉ ุงููุตุต ุฃู ุงูููุงูุงุช.",
            "ูุชุงุจุนุฉ ุขุฎุฑ ุงููุณุชุฌุฏุงุช ูู ุนุงูู ุงูุชูููููุฌูุง.",
            "ุงููุดุงุฑูุฉ ูู ููุงูุดุงุช ุณูุงุณูุฉ ุฃู ุงุฌุชูุงุนูุฉ."
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุฑุงุจุน: ููู ุชุชุนุงูู ูุน ุงูุชุญุฏูุงุชุ",
        options: [
            "ุฃุจุญุซ ุนู ุญููู ููุทููุฉ ุชุณุชูุฏ ุฅูู ุงูุจูุงูุงุช.",
            "ุฃููุฑ ูู ุญููู ุฌุฏูุฏุฉ ููุจุชูุฑุฉ.",
            "ุฃุณุชุนูู ุจุฎุจุฑุงุช ุงูุขุฎุฑูู ูุฃุนูู ุถูู ูุฑูู.",
            "ุฃููู ุจุงูุชุฎุทูุท ุจุนูุงูุฉ ูุฃุญูู ุฌููุน ุงูุฎูุงุฑุงุช."
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุฎุงูุณ: ุฃู ูู ุงูููุงุฏ ุงูุฏุฑุงุณูุฉ ุงูููุถูุฉ ูุฏูู ูู ุงููุฏุฑุณุฉุ",
        options: [
            "ุงูุฑูุงุถูุงุช ุฃู ุงูููุฒูุงุก.",
            "ุงูุฃุฏุจ ุฃู ุงููู.",
            "ุงูุนููู ุฃู ุงูุฃุญูุงุก.",
            "ุงูุชุงุฑูุฎ ุฃู ุงูุฏุฑุงุณุงุช ุงูุงุฌุชูุงุนูุฉ."
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุณุงุฏุณ:ููู ุชููู ูุฏุฑุชู ูู ุงูุชูุงุตู ู ุงูุชุนุจูุฑ ุนู ุงูุฃููุงุฑุ",
        options: [
            "ููุชุงุฒ",
            "ุฌูุฏ",
            "ูุชูุณุท",
            "ุถุนูู"
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุณุงุจุน: ูุง ููุน ุงูููุงุฑุงุช ุงูุชู ุชุดุนุฑ ุฃููุง ุชุฃุชูู ุจุณูููุฉุ",
        options: [
            "ุญู ุงููุดููุงุช ุงูุฑูุงุถูุฉ ูุงูุชุญููู ุงูููุทูู.",
            "ุงูุชุนุจูุฑ ุนู ุงูุฃููุงุฑ ุจุดูู ุฅุจุฏุงุนู ูููู.",
            "ุงูุจุฑูุฌุฉ ุฃู ุงูุชุนุงูู ูุน ุงูุฃุฌูุฒุฉ ุงูุชูููุฉ.",
            "ุงูุชูุงุตู ุงููุนุงู ูุน ุงูุขุฎุฑูู ูุฅููุงุนูู ุจูุฌูุฉ ูุธุฑู."
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุซุงูู: ูุง ุงูุฐู ูุฏูุนู ููุดุนูุฑ ุจุงูุฅูุฌุงุฒุ",
        options: [
            "ุงููุฌุงุญ ูู ุญู ูุณุฃูุฉ ุตุนุจุฉ ุฃู ูุดุฑูุน ูุนูุฏ.",
            "ุฅุจุฏุงุน ุดูุก ุฌุฏูุฏ ูุซูุฑ ุฅุนุฌุงุจ ุงูุขุฎุฑูู.",
            "ูุณุงุนุฏุฉ ุงูุขุฎุฑูู ูู ุชุญููู ุฃูุฏุงููู.",
            "ุชุทููุฑ ููุฑุฉ ุฃู ููููู ูุคุฏู ุฅูู ุชุบููุฑ ุฅูุฌุงุจู."
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุชุงุณุน: ููู ุชูุถู ุฃู ุชูุถู ุญูุงุชู ุงูููููุฉุ",
        options: [
            "ูู ูุฎุชุจุฑ ุฃู ุจูุฆุฉ ุจุญุซูุฉ.",
            "ูู ููุชุจ ุฅุจุฏุงุนู ุฃู ุงุณุชูุฏูู ููู.",
            "ูู ุดุฑูุฉ ุชูููุฉ ุฃู ุจูุฆุฉ ุนูู ูููุฆุฉ ุจุงูุชุญุฏูุงุช.",
            "ูู ูุคุณุณุฉ ุงุฌุชูุงุนูุฉ ุฃู ุญููููุฉ ุชุฎุฏู ุงููุฌุชูุน."
        ]
    },
    {
        question: "ุงูุณุคุงู ุงูุนุงุดุฑ: ูุง ูู ุงููุฌุงู ุงูุฐู ูุซูุฑ ูุถููู ุฃูุซุฑุ",
        options: [
            "ุงูุนููู ูุงูุชูููููุฌูุง.",
            "ุงููู ูุงูุชุตููู.",
            "ุงูุตุญุฉ ูุงูุจูุฆุฉ.",
            "ุงููุงููู ุฃู ุงูุนูุงูุงุช ุงูุฏูููุฉ."
        ]
    }
];



let currentQuestion = 0;

    function loadQuestion(index) {
        if (index < questions.length) {
            document.querySelector(".question-text").innerText = questions[index].question;
            const choices = document.querySelector(".choices");
            choices.innerHTML = "";
            questions[index].options.forEach((answer) => {
                choices.innerHTML += `<label><input type="radio" id="user_answer" name="question${index + 1}" value="${answer}"> ${answer}</label><br>`;
            });
            document.getElementById("next-btn").disabled = true; 

            const progressPercent = ((index + 1) / questions.length) * 100;
            document.getElementById("progress").style.width = progressPercent + "%";
        } else {
            document.querySelector(".exam-container").innerHTML = `
                <div class="completion-container">
                    <i class="fas fa-check-circle check-icon"></i>
                    <h2>ุดูุฑูุง ูุฅุชูุงูู ุงูุงุฎุชุจุงุฑ!</h2>
                    <p>ููุฏ ุฃูููุช ูู ุงููุฑุญูุฉ ุงูุฃููู . ูุฑุฌู ุงูููุฑ ุนูู ุงูุฒุฑ ุฃุฏูุงู ููุงูุชูุงู ุฅูู ุงููุฑุญูุฉ ุงูุชุงููุฉ ูุฅุฏุฎุงู ุงูููุงุฏ ูุงูุฏุฑุฌุงุช.</p>
                    <button id="next-stage-btn" class="start-btn">ุงูุชูู ูููุฑุญูุฉ ุงูุซุงููุฉ</button>
                </div>
            `;
        document.getElementById('next-stage-btn').addEventListener('click', function() {
            
            saveQuestions();
 // ุฅุฎูุงุก ุดุงุดุฉ ุงูุงูุชูุงุก ูู ุงูุงุฎุชุจุงุฑ
        document.querySelector('.completion-container').style.display = 'none';
        document.querySelector('.exam-container').style.display = 'none';


 // ุฅุธูุงุฑ ุงููุฑุญูุฉ ุงูุซุงููุฉ
           document.getElementById('second-stage').style.display = 'block';     
           
        
        
                     });
                 }
              }
    
document.getElementById("next-btn").addEventListener("click", () => {
    const Question=questions[currentQuestion].question;
    const userInput = document.getElementById('user_answer');
    if (currentQuestion < questions.length - 1) {
        currentQuestion++;
        loadQuestion(currentQuestion);
        document.getElementById("back-btn").style.display = currentQuestion > 0 ? "inline" : "none";
    } else {
        loadQuestion(questions.length);
    }
    submitAnswer(Question,userInput.value);
});

document.getElementById("back-btn").addEventListener("click", () => {
    if (currentQuestion > 0) {
        removeAnswer(currentQuestion);
        currentQuestion--;
        loadQuestion(currentQuestion);
        document.getElementById("back-btn").style.display = currentQuestion > 0 ? "inline" : "none";
    }
    
});

document.querySelector(".choices").addEventListener("change", () => {
    document.getElementById("next-btn").disabled = false;
});

loadQuestion(currentQuestion);



///start exam 

    const startTestBtn = document.getElementById('start-test-btn');
    const murshidMessage = document.getElementById('murshid-message');
    const examBox = document.getElementById('exam-box');

    startTestBtn.addEventListener('click', function() {
        murshidMessage.style.display = 'none';
        
        examBox.style.display = 'block';
    });


function validateGrades() {
    const subjectRows = document.querySelectorAll('.subject-row');
    const selectedSubjects = new Set();

    for (let row of subjectRows) {
        const dropdown = row.querySelector('.subject-dropdown');
        const gradeInput = row.querySelector('.grade-input');

        const selectedSubject = dropdown.value;
        const grade = gradeInput.value;

        // ุงูุชุญูู ูู ุงุฎุชูุงุฑ ูุงุฏุฉ
        if (!selectedSubject) {
            alert('ูุฑุฌู ุงุฎุชูุงุฑ ูุงุฏุฉ.');
            return false; 
        }

        // ุงูุชุญูู ูู ุนุฏู ุชูุฑุงุฑ ุงูููุงุฏ
        if (selectedSubjects.has(selectedSubject)) {
            alert('ูุฌุจ ุงุฎุชูุงุฑ ููุงุฏ ูุฎุชููุฉ.');
            return false;
        }
        selectedSubjects.add(selectedSubject);

        // ุงูุชุญูู ูู ุฃู ุงูุฏุฑุฌุฉ ุจูู 0 ู 100
        if (grade === '' || grade < 0 || grade > 100 || isNaN(grade)) {
            alert('ูุฌุจ ุฃู ุชููู ุงูุฏุฑุฌุฉ ุจูู 0 ู 100.');
            return false; 
        }
    }

    return true; 
}


//ุนุฑุถ ุงููุชูุฌุฉ
document.getElementById('submit-info-btn').addEventListener('click', function() {
    $first_sub=document.getElementById("first_sub");
    $first_mark=document.getElementById("first_mark");
    $two_sub=document.getElementById("two_sub");
    $two_mark=document.getElementById("two_mark");
    $third_sub=document.getElementById("third_sub");
    $third_mark=document.getElementById("third_mark");
    $four_sub=document.getElementById("four_sub");
    $four_mark=document.getElementById("four_mark");
    $five_sub=document.getElementById("five_sub");
    $five_mark=document.getElementById("five_mark");
    $six_sub=document.getElementById("six_sub");
    $six_mark=document.getElementById("six_mark");
    $seven_sub=document.getElementById("seven_sub");
    $seven_mark=document.getElementById("seven_mark");
    $eight_sub=document.getElementById("eight_sub");
    $eight_mark=document.getElementById("eight_mark");
    $nine_sub=document.getElementById("nine_sub");
    $nine_mark=document.getElementById("nine_mark");
    marks = [
        {
         [$first_sub.value]: $first_mark.value
        },
        {
         [$two_sub.value]: $two_mark.value
        },
        {
         [$third_sub.value]: $third_mark.value
        },
        {
         [$four_sub.value]: $four_mark.value
        },
        {
         [$five_sub.value]: $five_mark.value
        },
        {
         [$six_sub.value]: $six_mark.value
        },
        {
         [$seven_sub.value]: $seven_mark.value
        },
        {
         [$eight_sub.value]: $eight_mark.value
        },
        {
         [$nine_sub.value]: $nine_mark.value
        }
     ];
   
    saveMarks(marks);

    if (validateGrades()) {
    document.querySelector('.subject-container').style.display = 'none';

    // const recommendationMessage = `
    //     <div class="recommendation" id="result" >

               
    //         </div>
    // `;
   

    getResult();

    // document.querySelector('#second-stage').innerHTML += recommendationMessage; 

    }
   
});
//save options
function submitAnswer(question,answer)
{
    $.ajax({
        type: 'POST',
        url: '/submitAnswer',
        data: {
            question: question,
            answer:answer,
            id:currentQuestion,
            _token: $('meta[name="csrf-token"]').attr('content')  // CSRF token from meta tag
        },
        success: function(response) {
            console.log(response);
            // if(i<6){
            //     i++;
            //     sendInitQuestion();
            // }
            //   // Load next question
            // else
            // marks();
        },
        error: function(xhr, status, error) {
            console.error("Error: " + error);
        }
    });
}
function removeAnswer(currentQuestion)
{
   
    $.ajax({
        type: 'POST',
        url: '/removeAnswer',
        data: {
           
            id:currentQuestion,
            _token: $('meta[name="csrf-token"]').attr('content')  // CSRF token from meta tag
        },
        success: function(response) {
            console.log(response);
          
        },
        error: function(xhr, status, error) {
            console.error("Error: " + error);
        }
    });
}
function saveQuestions()
{
    $.ajax({
        type: 'GET',
        url: '/saveQuestions',
        data: {
                     
            _token: $('meta[name="csrf-token"]').attr('content')  // CSRF token from meta tag
        },
        success: function(response) {
            console.log(response);
           
          
        },
        error: function(xhr, status, error) {
            console.error("Error: " + error);
        }
    });
}
function saveMarks(marks)
{
   
    $.ajax({
        type: 'POST',
        url: '/saveMarks',
        data: {
           
            mark:marks,
            _token: $('meta[name="csrf-token"]').attr('content')  // CSRF token from meta tag
        },
        success: function(response) {
            console.log(response);
          
        },
        error: function(xhr, status, error) {
            console.error("Error: " + error);
        }
    });
}
function getResult() {
    $.ajax({
        type: 'get',
        url: '/result',
        success: function(response) {
           
           
            message=response.msg;
            
            const recommendations = message.split("\n\n");
            console.log(recommendations);
            let formattedHTML =  `
             <div class="recommendation">
            <h2>ูุชูุฌุฉ ุงูุงุฎุชุจุงุฑ</h2>
            <p>ุจูุงุกู ุนูู ุฅุฌุงุจุงุชู ูุชุญููู ุงูุชูุงูุงุชู ุงูุดุฎุตูุฉ ูุงูููููุฉุ ููุฏู ูู ุงูุชุฎุตุตุงุช ุงูุชู ุชุชูุงุณุจ ูุน ูุฏุฑุงุชู ูุงูุชูุงูุงุชู. 
            ูุฐู ุงูุชุฎุตุตุงุช ุชู ุงุฎุชูุงุฑูุง ุจุนูุงูุฉ ูุชูุงุณุจ ููููู ุงูุดุฎุตูุฉ ูุชูููู ูู ุงูุชููู ูุงููุฌุงุญ ูู ูุณูุฑุชู ุงูุฃูุงุฏูููุฉ ูุงูููููุฉ:</p> 
            <ol>`;
            
            recommendations.forEach((rec, index) => {
                console.log(rec);
                // Extracting the title and description using regex
                // let [_, title, description] = rec.match(/\d+\.\s\*\*(.+?)\*\*:(.+)/) || [];
                let [_, title, description] = rec.match(/\*\*(.+?)\*\*\s*-\s*(.+)/) || [];
                console.log(description); // Log the entire response for debugging
                console.log(title); // Log the entire response for debugging
                // let [_, title, description] = rec.match(/\d+\.\s\*\*(.+?)\*\*\s*[-:]\s*(.+)/) || [];

                if (title && description) {
                    formattedHTML += `
                        
                        <li>
                            <strong>${title}</strong>: ${description.trim()}
                        </li>
                    `;
                }
               
            });
            
            formattedHTML += '</ol><br>';
            formattedHTML += `<p>ุชู ุงุฎุชูุงุฑ ูุฐู ุงูุชุฎุตุตุงุช ุจูุงุกู ุนูู ููุงุฑุงุช ุงูุทุงูุจ ูุงูุชูุงูุงุชู ูุฃุฏุงุฆู ุงูุฃูุงุฏูููุ ูุน ูุฑุงุนุงุฉ ุงูุงุชุฌุงูุงุช ุงูุญุงููุฉ ูู ุณูู ุงูุนูู ูุงููุฌุงูุงุช ุงููุงุนุฏุฉ.</p>
                        
            </div>`;
            
            
            // const content = `
            //     <h2>ูุชูุฌุฉ ุงูุงุฎุชุจุงุฑ</h2>
                
            //     <p>${response.msg}</p>
                
            //     <div class="button-container">
            //         <button id="next-btn" class="start-chat-btn">ุงุจุฏุฃ ุงูุฏุฑุฏุดุฉ</button>
            //         <button id="back-btn" class="download-pdf-btn">ูู ุจุชูุฒูู ุงููุชูุฌุฉ PDF <i class="fas fa-download"></i></button>
            //     </div>
            // `;
            
            // // Insert the content into the recommendation div
            // document.getElementById('result').innerHTML = content;
            document.querySelector('#second-stage').innerHTML += formattedHTML; 
           
            saveResult(message);
        },
        error: function(xhr, status, error) {
            console.error("Error: " + error);
        }

    });
}
function saveResult(recommendations)
{
   
    $.ajax({
        type: 'POST',
        url: '/saveResult',
        data: {
           
            results:recommendations,
            _token: $('meta[name="csrf-token"]').attr('content')  // CSRF token from meta tag
        },
        success: function(response) {
            console.log(response);
          
        },
        error: function(xhr, status, error) {
            console.error("Error: " + error);
        }
    });
}